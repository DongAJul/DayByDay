{"ast":null,"code":"var _jsxFileName = \"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/PDFUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport PDFExtract from './PDFExtract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nfunction Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const fileInputRef = useRef(null);\n  function onFileChange(e) {\n    setFile(e.target.files[0]);\n  }\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages);\n  }\n  function handleUploadClick() {\n    fileInputRef.current.click();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUploadClick,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: onFileChange,\n      style: {\n        display: 'none'\n      },\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), file &&\n    /*#__PURE__*/\n    // <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\n    //   {Array.from(new Array(numPages), (_, index) => (\n    //     <Page key={`page_${index + 1}`} pageNumber={index + 1} />\n    //   ))}\n    // </Document>\n    _jsxDEV(PDFExtract, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"CNvaQefvparqE67t7Gc4awZaBz4=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useRef","Document","Page","pdfjs","PDFExtract","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","Upload","_s","file","setFile","numPages","setNumPages","fileInputRef","onFileChange","e","target","files","onDocumentLoadSuccess","handleUploadClick","current","click","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","style","display","ref","_c","$RefreshReg$"],"sources":["/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/PDFUpload.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport PDFExtract from './PDFExtract';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction Upload() {\n  const [file, setFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const fileInputRef = useRef(null);\n\n  function onFileChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  function handleUploadClick() {\n    fileInputRef.current.click();\n  }\n\n  return (\n    <div>\n      <h1>PDF Viewer</h1>\n      <button onClick={handleUploadClick}>Upload</button>\n      <input\n        type=\"file\"\n        accept=\".pdf\"\n        onChange={onFileChange}\n        style={{ display: 'none' }}\n        ref={fileInputRef}\n      />\n      {file && (\n        // <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\n        //   {Array.from(new Array(numPages), (_, index) => (\n        //     <Page key={`page_${index + 1}`} pageNumber={index + 1} />\n        //   ))}\n        // </Document>\n        <PDFExtract file={file} />\n      )}\n    </div>\n  );\n}\n\nexport default Upload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AACjD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtCH,KAAK,CAACI,mBAAmB,CAACC,SAAS,GAAI,2CAA0CL,KAAK,CAACM,OAAQ,gBAAe;AAE9G,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMiB,YAAY,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAEjC,SAASiB,YAAYA,CAACC,CAAC,EAAE;IACvBL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B;EAEA,SAASC,qBAAqBA,CAAC;IAAEP;EAAS,CAAC,EAAE;IAC3CC,WAAW,CAACD,QAAQ,CAAC;EACvB;EAEA,SAASQ,iBAAiBA,CAAA,EAAG;IAC3BN,YAAY,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC;EAC9B;EAEA,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA;MAAQwB,OAAO,EAAER,iBAAkB;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDvB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAEhB,YAAa;MACvBiB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,GAAG,EAAEpB;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EACDjB,IAAI;IAAA;IACH;IACA;IACA;IACA;IACA;IACAN,OAAA,CAACF,UAAU;MAACQ,IAAI,EAAEA;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAtCQD,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}