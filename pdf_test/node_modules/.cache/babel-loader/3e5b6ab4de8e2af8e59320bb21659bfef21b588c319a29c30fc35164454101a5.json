{"ast":null,"code":"var _jsxFileName = \"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/App.js\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport PDFViewer from \"./PDFViewer\";\nimport PDFExtract from \"./PDFExtract\";\nimport PDFUpload from \"./PDFUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nfunction App() {\n  // const [extractedText, setExtractedText] = useState(\"\");\n\n  // const extractTextFromPDF = async (pdfUrl) => {\n  //   const pdf = await pdfjs.getDocument(pdfUrl).promise;\n  //   const numPages = pdf.numPages;\n  //   let allText = \"\";\n\n  //   for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n  //     const page = await pdf.getPage(pageNumber);\n  //     const content = await page.getTextContent();\n  //     const strings = content.items.map((item) => item.str);\n  //     allText += strings.join(\" \");\n  //   }\n\n  //   return allText;\n  // };\n\n  // useEffect(() => {\n  // extractTextFromPDF(\"./lecture01.pdf\").then((text) => {\n  //   setExtractedText(text);\n  // });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PDFUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","pdfjs","PDFViewer","PDFExtract","PDFUpload","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { pdfjs } from \"react-pdf\";\nimport PDFViewer from \"./PDFViewer\";\nimport PDFExtract from \"./PDFExtract\";\nimport PDFUpload from \"./PDFUpload\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction App() {\n  // const [extractedText, setExtractedText] = useState(\"\");\n\n  // const extractTextFromPDF = async (pdfUrl) => {\n  //   const pdf = await pdfjs.getDocument(pdfUrl).promise;\n  //   const numPages = pdf.numPages;\n  //   let allText = \"\";\n\n  //   for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n  //     const page = await pdf.getPage(pageNumber);\n  //     const content = await page.getTextContent();\n  //     const strings = content.items.map((item) => item.str);\n  //     allText += strings.join(\" \");\n  //   }\n\n  //   return allText;\n  // };\n\n  // useEffect(() => {\n  // extractTextFromPDF(\"./lecture01.pdf\").then((text) => {\n  //   setExtractedText(text);\n  // });\n  // }, []);\n\n  return (\n    <div>\n      {/* <PDFViewer></PDFViewer> */}\n      {/* <p>Extracted text:</p>\n      <pre>{extractedText}</pre> */}\n      <PDFUpload></PDFUpload>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,WAAW;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpCL,KAAK,CAACM,mBAAmB,CAACC,SAAS,GAAI,2CAA0CP,KAAK,CAACQ,OAAQ,gBAAe;AAE9G,SAASC,GAAGA,CAAA,EAAG;EACb;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACEJ,OAAA;IAAAK,QAAA,eAIEL,OAAA,CAACF,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACC,EAAA,GAhCQN,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}