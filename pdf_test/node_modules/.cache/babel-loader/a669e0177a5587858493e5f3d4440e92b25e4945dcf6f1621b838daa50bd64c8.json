{"ast":null,"code":"import './App.css';\nimport React, { useState } from 'react';\nimport PDFViewer from './PDFViewer';\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nfunction App() {\n  const extractTextFromPDF = async pdfUrl => {\n    const pdf = await pdfjs.getDocument(pdfUrl).promise;\n    const numPages = pdf.numPages;\n    let allText = '';\n    for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n      const page = await pdf.getPage(pageNumber);\n      const content = await page.getTextContent();\n      const strings = content.items.map(item => item.str);\n      allText += strings.join(' ');\n    }\n    return allText;\n  };\n  return (\n    // <PDFViewer></PDFViewer>,\n    extractTextFromPDF('./lecture01.pdf').then(text => {\n      console.log('Extracted text:', text);\n    })\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PDFViewer","pdfjs","GlobalWorkerOptions","workerSrc","version","App","extractTextFromPDF","pdfUrl","pdf","getDocument","promise","numPages","allText","pageNumber","page","getPage","content","getTextContent","strings","items","map","item","str","join","then","text","console","log","_c","$RefreshReg$"],"sources":["/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport PDFViewer from './PDFViewer';\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction App() {\n\n  const extractTextFromPDF = async (pdfUrl) => {\n    const pdf = await pdfjs.getDocument(pdfUrl).promise;\n    const numPages = pdf.numPages;\n    let allText = '';\n\n    for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n      const page = await pdf.getPage(pageNumber);\n      const content = await page.getTextContent();\n      const strings = content.items.map(item => item.str);\n      allText += strings.join(' ');\n    }\n\n    return allText;\n  };\n\n  return (\n    // <PDFViewer></PDFViewer>,\n    extractTextFromPDF('./lecture01.pdf').then(text => {\n      console.log('Extracted text:', text);\n    })\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,KAAK,QAAQ,WAAW;AACjCA,KAAK,CAACC,mBAAmB,CAACC,SAAS,GAAI,2CAA0CF,KAAK,CAACG,OAAQ,gBAAe;AAE9G,SAASC,GAAGA,CAAA,EAAG;EAEb,MAAMC,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,WAAW,CAACF,MAAM,CAAC,CAACG,OAAO;IACnD,MAAMC,QAAQ,GAAGH,GAAG,CAACG,QAAQ;IAC7B,IAAIC,OAAO,GAAG,EAAE;IAEhB,KAAK,IAAIC,UAAU,GAAG,CAAC,EAAEA,UAAU,IAAIF,QAAQ,EAAEE,UAAU,EAAE,EAAE;MAC7D,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,OAAO,CAACF,UAAU,CAAC;MAC1C,MAAMG,OAAO,GAAG,MAAMF,IAAI,CAACG,cAAc,CAAC,CAAC;MAC3C,MAAMC,OAAO,GAAGF,OAAO,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,CAAC;MACnDV,OAAO,IAAIM,OAAO,CAACK,IAAI,CAAC,GAAG,CAAC;IAC9B;IAEA,OAAOX,OAAO;EAChB,CAAC;EAED;IACE;IACAN,kBAAkB,CAAC,iBAAiB,CAAC,CAACkB,IAAI,CAACC,IAAI,IAAI;MACjDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;IACtC,CAAC;EAAC;AAEN;AAACG,EAAA,GAvBQvB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}