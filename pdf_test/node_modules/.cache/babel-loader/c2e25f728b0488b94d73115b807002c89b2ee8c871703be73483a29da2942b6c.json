{"ast":null,"code":"var _jsxFileName = \"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport PDFViewer from \"./PDFViewer\";\nimport { pdfjs } from \"react-pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nfunction App() {\n  _s();\n  const [extractedText, setExtractedText] = useState(\"\");\n  const extractTextFromPDF = async pdfUrl => {\n    const pdf = await pdfjs.getDocument(pdfUrl).promise;\n    const numPages = pdf.numPages;\n    let allText = \"\";\n    for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n      const page = await pdf.getPage(pageNumber);\n      const content = await page.getTextContent();\n      const strings = content.items.map(item => item.str);\n      allText += strings.join(\" \");\n    }\n    return allText;\n  };\n  useEffect(() => {\n    extractTextFromPDF(\"./lecture01.pdf\").then(text => {\n      setExtractedText(text);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Extracted text:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: extractedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ofl+c6zbiptznkmJvvFNncsD2Ac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PDFViewer","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","App","_s","extractedText","setExtractedText","extractTextFromPDF","pdfUrl","pdf","getDocument","promise","numPages","allText","pageNumber","page","getPage","content","getTextContent","strings","items","map","item","str","join","then","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/React/pdf_test/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport PDFViewer from \"./PDFViewer\";\nimport { pdfjs } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction App() {\n  const [extractedText, setExtractedText] = useState(\"\");\n\n  const extractTextFromPDF = async (pdfUrl) => {\n    const pdf = await pdfjs.getDocument(pdfUrl).promise;\n    const numPages = pdf.numPages;\n    let allText = \"\";\n\n    for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n      const page = await pdf.getPage(pageNumber);\n      const content = await page.getTextContent();\n      const strings = content.items.map((item) => item.str);\n      allText += strings.join(\" \");\n    }\n\n    return allText;\n  };\n\n  useEffect(() => {\n    extractTextFromPDF(\"./lecture01.pdf\").then((text) => {\n      setExtractedText(text);\n    });\n  }, []);\n\n  return (\n    <div>\n      {/* <PDFViewer></PDFViewer> */}\n      <p>Extracted text:</p>\n      <pre>{extractedText}</pre>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,KAAK,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClCF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAI,2CAA0CJ,KAAK,CAACK,OAAQ,gBAAe;AAE9G,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,WAAW,CAACF,MAAM,CAAC,CAACG,OAAO;IACnD,MAAMC,QAAQ,GAAGH,GAAG,CAACG,QAAQ;IAC7B,IAAIC,OAAO,GAAG,EAAE;IAEhB,KAAK,IAAIC,UAAU,GAAG,CAAC,EAAEA,UAAU,IAAIF,QAAQ,EAAEE,UAAU,EAAE,EAAE;MAC7D,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,OAAO,CAACF,UAAU,CAAC;MAC1C,MAAMG,OAAO,GAAG,MAAMF,IAAI,CAACG,cAAc,CAAC,CAAC;MAC3C,MAAMC,OAAO,GAAGF,OAAO,CAACG,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC;MACrDV,OAAO,IAAIM,OAAO,CAACK,IAAI,CAAC,GAAG,CAAC;IAC9B;IAEA,OAAOX,OAAO;EAChB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdY,kBAAkB,CAAC,iBAAiB,CAAC,CAACkB,IAAI,CAAEC,IAAI,IAAK;MACnDpB,gBAAgB,CAACoB,IAAI,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA;IAAA4B,QAAA,gBAEE5B,OAAA;MAAA4B,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtBhC,OAAA;MAAA4B,QAAA,EAAMtB;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAAC3B,EAAA,CA/BQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}